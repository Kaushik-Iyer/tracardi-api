# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pro_services.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12pro_services.proto\x12\x0ctracardi_pro\x1a\x1cgoogle/protobuf/struct.proto\"\r\n\x0b\x45mptyParams\"\x88\x02\n\x0fServiceMetadata\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12\x0f\n\x07traffic\x18\x04 \x01(\t\x12\x0c\n\x04icon\x18\x05 \x01(\t\x12\x0c\n\x04tags\x18\x06 \x03(\t\x12\x0e\n\x06submit\x18\x07 \x03(\t\x12(\n\x07\x63ontext\x18\x08 \x01(\x0b\x32\x17.google.protobuf.Struct\x12-\n\x0crequirements\x18\t \x01(\x0b\x32\x17.google.protobuf.Struct\x12.\n\rdocumentation\x18\n \x01(\x0b\x32\x17.google.protobuf.Struct\"\x91\x01\n\x08Services\x12\x36\n\x08services\x18\x01 \x03(\x0b\x32$.tracardi_pro.Services.ServicesEntry\x1aM\n\rServicesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12+\n\x05value\x18\x02 \x01(\x0b\x32\x1c.tracardi_pro.ServiceEnvelop:\x02\x38\x01\" \n\x0ePluginMetaData\x12\x0e\n\x06module\x18\x01 \x01(\t\"V\n\x06Plugin\x12%\n\x04init\x18\x01 \x01(\x0b\x32\x17.google.protobuf.Struct\x12%\n\x04\x66orm\x18\x02 \x01(\x0b\x32\x17.google.protobuf.Struct\"\x16\n\x05Hosts\x12\r\n\x05hosts\x18\x01 \x03(\t\"\xe7\x01\n\x0eServiceEnvelop\x12/\n\x08metadata\x18\x01 \x01(\x0b\x32\x1d.tracardi_pro.ServiceMetadata\x12%\n\x04\x66orm\x18\x02 \x01(\x0b\x32\x17.google.protobuf.Struct\x12%\n\x04init\x18\x03 \x01(\x0b\x32\x17.google.protobuf.Struct\x12,\n\x0b\x64\x65stination\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\x12(\n\x07plugins\x18\x05 \x03(\x0b\x32\x17.google.protobuf.Struct\"1\n\x0b\x43redentials\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\"C\n\x0fHostCredentials\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12\x0c\n\x04host\x18\x03 \x01(\t\"\x16\n\x05Token\x12\r\n\x05token\x18\x01 \x01(\t\"@\n\x0cServiceQuery\x12\r\n\x05query\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x10\n\x08\x63\x61tegory\x18\x03 \x01(\t\"\'\n\x08UserData\x12\r\n\x05token\x18\x01 \x01(\t\x12\x0c\n\x04host\x18\x02 \x01(\t2\xdc\x02\n\x07Service\x12N\n\x16get_available_services\x12\x1a.tracardi_pro.ServiceQuery\x1a\x16.tracardi_pro.Services\"\x00\x12\x42\n\nget_plugin\x12\x1c.tracardi_pro.PluginMetaData\x1a\x14.tracardi_pro.Plugin\"\x00\x12?\n\x07sign_up\x12\x1d.tracardi_pro.HostCredentials\x1a\x13.tracardi_pro.Token\"\x00\x12>\n\x07sign_in\x12\x19.tracardi_pro.Credentials\x1a\x16.tracardi_pro.UserData\"\x00\x12<\n\x08validate\x12\x19.tracardi_pro.EmptyParams\x1a\x13.tracardi_pro.Token\"\x00\x62\x06proto3')



_EMPTYPARAMS = DESCRIPTOR.message_types_by_name['EmptyParams']
_SERVICEMETADATA = DESCRIPTOR.message_types_by_name['ServiceMetadata']
_SERVICES = DESCRIPTOR.message_types_by_name['Services']
_SERVICES_SERVICESENTRY = _SERVICES.nested_types_by_name['ServicesEntry']
_PLUGINMETADATA = DESCRIPTOR.message_types_by_name['PluginMetaData']
_PLUGIN = DESCRIPTOR.message_types_by_name['Plugin']
_HOSTS = DESCRIPTOR.message_types_by_name['Hosts']
_SERVICEENVELOP = DESCRIPTOR.message_types_by_name['ServiceEnvelop']
_CREDENTIALS = DESCRIPTOR.message_types_by_name['Credentials']
_HOSTCREDENTIALS = DESCRIPTOR.message_types_by_name['HostCredentials']
_TOKEN = DESCRIPTOR.message_types_by_name['Token']
_SERVICEQUERY = DESCRIPTOR.message_types_by_name['ServiceQuery']
_USERDATA = DESCRIPTOR.message_types_by_name['UserData']
EmptyParams = _reflection.GeneratedProtocolMessageType('EmptyParams', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYPARAMS,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.EmptyParams)
  })
_sym_db.RegisterMessage(EmptyParams)

ServiceMetadata = _reflection.GeneratedProtocolMessageType('ServiceMetadata', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEMETADATA,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.ServiceMetadata)
  })
_sym_db.RegisterMessage(ServiceMetadata)

Services = _reflection.GeneratedProtocolMessageType('Services', (_message.Message,), {

  'ServicesEntry' : _reflection.GeneratedProtocolMessageType('ServicesEntry', (_message.Message,), {
    'DESCRIPTOR' : _SERVICES_SERVICESENTRY,
    '__module__' : 'pro_services_pb2'
    # @@protoc_insertion_point(class_scope:tracardi_pro.Services.ServicesEntry)
    })
  ,
  'DESCRIPTOR' : _SERVICES,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.Services)
  })
_sym_db.RegisterMessage(Services)
_sym_db.RegisterMessage(Services.ServicesEntry)

PluginMetaData = _reflection.GeneratedProtocolMessageType('PluginMetaData', (_message.Message,), {
  'DESCRIPTOR' : _PLUGINMETADATA,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.PluginMetaData)
  })
_sym_db.RegisterMessage(PluginMetaData)

Plugin = _reflection.GeneratedProtocolMessageType('Plugin', (_message.Message,), {
  'DESCRIPTOR' : _PLUGIN,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.Plugin)
  })
_sym_db.RegisterMessage(Plugin)

Hosts = _reflection.GeneratedProtocolMessageType('Hosts', (_message.Message,), {
  'DESCRIPTOR' : _HOSTS,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.Hosts)
  })
_sym_db.RegisterMessage(Hosts)

ServiceEnvelop = _reflection.GeneratedProtocolMessageType('ServiceEnvelop', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEENVELOP,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.ServiceEnvelop)
  })
_sym_db.RegisterMessage(ServiceEnvelop)

Credentials = _reflection.GeneratedProtocolMessageType('Credentials', (_message.Message,), {
  'DESCRIPTOR' : _CREDENTIALS,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.Credentials)
  })
_sym_db.RegisterMessage(Credentials)

HostCredentials = _reflection.GeneratedProtocolMessageType('HostCredentials', (_message.Message,), {
  'DESCRIPTOR' : _HOSTCREDENTIALS,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.HostCredentials)
  })
_sym_db.RegisterMessage(HostCredentials)

Token = _reflection.GeneratedProtocolMessageType('Token', (_message.Message,), {
  'DESCRIPTOR' : _TOKEN,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.Token)
  })
_sym_db.RegisterMessage(Token)

ServiceQuery = _reflection.GeneratedProtocolMessageType('ServiceQuery', (_message.Message,), {
  'DESCRIPTOR' : _SERVICEQUERY,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.ServiceQuery)
  })
_sym_db.RegisterMessage(ServiceQuery)

UserData = _reflection.GeneratedProtocolMessageType('UserData', (_message.Message,), {
  'DESCRIPTOR' : _USERDATA,
  '__module__' : 'pro_services_pb2'
  # @@protoc_insertion_point(class_scope:tracardi_pro.UserData)
  })
_sym_db.RegisterMessage(UserData)

_SERVICE = DESCRIPTOR.services_by_name['Service']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SERVICES_SERVICESENTRY._options = None
  _SERVICES_SERVICESENTRY._serialized_options = b'8\001'
  _EMPTYPARAMS._serialized_start=66
  _EMPTYPARAMS._serialized_end=79
  _SERVICEMETADATA._serialized_start=82
  _SERVICEMETADATA._serialized_end=346
  _SERVICES._serialized_start=349
  _SERVICES._serialized_end=494
  _SERVICES_SERVICESENTRY._serialized_start=417
  _SERVICES_SERVICESENTRY._serialized_end=494
  _PLUGINMETADATA._serialized_start=496
  _PLUGINMETADATA._serialized_end=528
  _PLUGIN._serialized_start=530
  _PLUGIN._serialized_end=616
  _HOSTS._serialized_start=618
  _HOSTS._serialized_end=640
  _SERVICEENVELOP._serialized_start=643
  _SERVICEENVELOP._serialized_end=874
  _CREDENTIALS._serialized_start=876
  _CREDENTIALS._serialized_end=925
  _HOSTCREDENTIALS._serialized_start=927
  _HOSTCREDENTIALS._serialized_end=994
  _TOKEN._serialized_start=996
  _TOKEN._serialized_end=1018
  _SERVICEQUERY._serialized_start=1020
  _SERVICEQUERY._serialized_end=1084
  _USERDATA._serialized_start=1086
  _USERDATA._serialized_end=1125
  _SERVICE._serialized_start=1128
  _SERVICE._serialized_end=1476
# @@protoc_insertion_point(module_scope)
