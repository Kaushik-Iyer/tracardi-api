{"file_name": "docs/events/event_tracking.md", "questions": ["What data is required when registering an event with Tracardi?"], "answer": "## Event registration\nTo register an event with Tracardi, you will need to send a POST request to the `/track` endpoint on the server where Tracardi is installed. \n\n\nYou need to write a code that will connect to the POST method to the url e.g.\nhttp://tracardi.page.com/track and send the data about event plus additional information on the source and session.\n\n```json title=\"Example of track data payload\" linenums=\"1\" hl_lines=\"13-24\"\n{\n  \"source\": {\n    \"id\": \"source-id\"\n  },\n  \"session\": {\n    \"id\": \"session-id\"\n  },\n  \"profile\": {\n    \"id\": \"profile-id\"\n  },\n  \"context\": {},\n  \"properties\": {},\n  \"events\": [ \n    {\n      \"type\": \"purchase-order\",\n      \"properties\": {\n        \"product\": \"Nike shoes\",\n        \"quantity\": 1\n      }\n    },\n    {\n      \"type\": \"page-view\"\n    }\n  ],\n  \"options\": { \n    \n  }\n} \n```\n\nThis POST request to the specified URL with the event data and additional information about the source and session. If the request is successful (i.e., the server returns a status code of 200), the code will print a message indicating that the event was registered successfully. If there was an error, it will print the error message returned by the server.\n\nNote that not all data is required. Below you can find example with only required data.\n\n```json title=\"Only required payload data\"\n{\n  \"source\": {\n    \"id\": \"source-id\"\n  },\n  \"session\": {\n    \"id\": \"session-id\"\n  },\n  \"events\": [\n    {\n      \"type\": \"purchase-order\",\n      \"properties\": {\n        \"product\": \"Nike shoes\",\n        \"quantity\": 1\n      }\n    },\n    {\n      \"type\": \"page-view\"\n    }\n  ]\n} \n```\n\nWhen registering an event, we need the following data.\n\n* Data about the event, i.e. `the type of the event` and its `properties`. There may be several events within one query.\n\n* `Source id`. It must match the event source ([inbound traffic](../getting_started/core_definitions.md#traffic)) defined in Tracardi.\n  Otherwise the Authorization error wil be returned.\n\n* And the `session id`. The session id is the saved id of the last session. If this is the first visit, you should\n  generate id, preferably using uuid4 and attach it to the payload. Visits are related with the session, so the session\n  id should change with each new user visit. Read more on session in\n  the [core definitions section](../getting_started/core_definitions.md#session)\n\nAdditionally, the `profile id` should be sent to the system. For the first visit, there is no profile id so profile id\nfield is not sent. After first connection Tracardi will return a profile id that should be attached with each subsequent\nconnection to /track endpoint.\n\nIf no `profile id` is defined in sent data then new profile id will be generated.\n\nIf you want to send `context` attach it to context field. Context as well as properties may have any schema.\n\nExample of event data payload with context `attached`.\n\n```json\n{\n  \"source\": {\n    \"id\": \"source-id\"\n  },\n  \"session\": {\n    \"id\": \"session-id\"\n  },\n  \"profile\": {\n    \"id\": \"profile-id\"\n  },\n  \"events\": [\n    {\n      \"type\": \"purchase-order\",\n      \"properties\": {\n        \"product\": \"Nike shoes\",\n        \"quantity\": 1\n      }\n    },\n    {\n      \"type\": \"page-view\"\n    }\n  ],\n  \"context\": {\n    \"device\": \"iPhone X\"\n  }\n} \n```"}