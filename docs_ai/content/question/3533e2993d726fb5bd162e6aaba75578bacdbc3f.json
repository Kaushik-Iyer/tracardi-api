{"file_name": "docs/integration/js/context.md", "questions": ["What is the purpose of event context in Tracardi?"], "answer": "# Tracker context\nEvent context in Tracardi allows you to extend the information about the __events__ by defining the scope of context data.\nThis context data can be used to pass additional information, such as browser metadata, system variables, etc.\n\n!!! Caution\n\n    When working with events context in Tracardi, it's important to understand that the context data refers to all \n    tracker events within a session, rather than a single event. The context data is saved in the session when it is \n    created and remains constant throughout the session, as data such as browser type or system used typically \n    does not change during a visitor's session on a website.\n\n    However, it's worth noting that some context data, such as the page URL, may change from event to event within a \n    session. This dynamic data is sent in the event context, allowing you to capture and utilize it in your \n    workflows accordingly. Althouhg It is configured on the tracker level it will be attached to each event.\n\nConfiguration can be extended with *context* parameter, where you may define the scope of context data.\n\n```javascript title=\"Example\" linenums=\"1\" hl_lines=\"10-16\"\n    const options = {\n      tracker: {\n        url: {\n            script: 'http://localhost:8686/tracker',\n            api: 'http://localhost:8686'\n        },\n        source: {\n            id: \"3ee63fc6-490a-4fd8-bfb3-bf0c8c8d3387\"\n        },\n        context: {\n            browser: true,\n            page: true,\n            session: false,\n            storage:true,\n            screen: true,\n            performance: false\n        }\n    }\n}\n```\n\nBy default, the following session context data will be sent to Tracardi:\n\n```json title=\"Example\" linenums=\"1\"\n{\n  \"context\": {\n    \"time\": {\n      \"local\": \"12/8/2021, 12:50:55 AM\",\n      \"tz\": \"Europe/Warsaw\"\n    },\n    \"browser\": {\n      \"local\": {\n        \"browser\": {\n          \"name\": \"Netscape\",\n          \"engine\": \"Gecko\",\n          \"appVersion\": \"5.0 (X11)\",\n          \"userAgent\": \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:94.0) Gecko/20100101 Firefox/94.0\",\n          \"language\": \"en-US\",\n          \"onLine\": true,\n          \"javaEnabled\": false,\n          \"cookieEnabled\": true\n        },\n        \"device\": {\n          \"platform\": \"Linux x86_64\"\n        }\n      }\n    },\n    \"screen\": {\n      \"local\": {\n        \"width\": 1835,\n        \"height\": 1032,\n        \"innerWidth\": 1835,\n        \"innerHeight\": 928,\n        \"availWidth\": 1835,\n        \"availHeight\": 1013,\n        \"colorDepth\": 24,\n        \"pixelDepth\": 24\n      }\n    }\n  }\n}\n```\n\nIt consists of browser data, screen data and page data. It can be extended with cookies and local storage data.\nStorage (localStorage) and session data is by default excluded. You can change it by explicitly flagging storage:true in\nthe context configuration.\n\n!!! Caution\n\n    Sending cookies and localStorage data can lead to data explosion in Tracardi database. Each customer may have\n    different cookies and local data that will lead to the 1000 fields per record limit in elastic. This will stop writing\n    new sessions to the system.\n\n### Event performance metrics\n\nIf you set `tracker.context.performance` to TRUE in tracker context configuration the result from __window.performance.getEntriesByType(\"\nnavigation\")__ will be sent as event context.\n\n```json title=\"Example of event context\"\n{\n  \"context\": {\n    \"performance\": {\n      \"name\": \"http://localhost:63343/analytics-js-tracardi/index.html\",\n      \"entryType\": \"navigation\",\n      \"startTime\": 0,\n      \"duration\": 0,\n      \"initiatorType\": \"navigation\",\n      \"nextHopProtocol\": \"http/1.1\",\n      \"workerStart\": 0,\n      \"redirectStart\": 0,\n      \"redirectEnd\": 0,\n      \"fetchStart\": 20,\n      \"domainLookupStart\": 101,\n      \"domainLookupEnd\": 101,\n      \"connectStart\": 101,\n      \"connectEnd\": 102,\n      \"secureConnectionStart\": 0,\n      \"requestStart\": 102,\n      \"responseStart\": 102,\n      \"responseEnd\": 102,\n      \"transferSize\": 9394,\n      \"encodedBodySize\": 9089,\n      \"decodedBodySize\": 9089,\n      \"serverTiming\": [],\n      \"unloadEventStart\": 106,\n      \"unloadEventEnd\": 107,\n      \"domInteractive\": 158,\n      \"domContentLoadedEventStart\": 160,\n      \"domContentLoadedEventEnd\": 161,\n      \"domComplete\": 0,\n      \"loadEventStart\": 0,\n      \"loadEventEnd\": 0,\n      \"type\": \"reload\",\n      \"redirectCount\": 0\n    }\n  }\n}\n```\n\n### Append profile ID to external links (Tag A)\n\nThe tracking script has the capability to include the current profile ID, session ID, and source ID in the URL parameter, \nallowing for consistent profile ID persistence across domains that utilize the same Tracardi system. \n\nTo enable this functionality, you can add the\nfollowing code: `trackExternalLinks: ['example.com', 'tracardi.com']`. This will automatically update all `A.href` links on the page \nwith the `__tr_pid`, `__tr_src` parameter, which will contain the current profile ID, source ID respectively, if\nthe A.href URL end with any of the defined domains in `trackExternalLinks`. In our example it is 'example.com' and , \n'tracardi.com'.\n\n```javascript title=\"Example\" linenums=\"1\" hl_lines=\"10-12\"\n    const options = {\n      tracker: {\n        url: {\n            script: 'http://localhost:8686/tracker',\n            api: 'http://localhost:8686'\n        },\n        source: {\n            id: \"3ee63fc6-490a-4fd8-bfb3-bf0c8c8d3387\"\n        },\n        settings: {\n          trackExternalLinks: ['example.com', 'tracardi.com']\n        }\n    }\n}\n```\n\n!!! Notice\n\n    This feature is available from version 0.8.1 up.\n\nTracardi recognize these params and saves them in `session.context`.\n\n```json\n{\n  \"context\": {\n    \"tracardi\": {\n      \"pass\": {\n        \"profile\": \"0adfd4c8-36eb-40cd-9350-5df37706286a\",\n        \"source\": \"d15aaf64-90ff-4c72-9d93-e7851c326127\",\n        \"session\": \"9cb9a69b-e657-47dc-85f6-791ebc4b4822\"\n      }\n    }\n  }\n}\n```\n\nWhere possible system will use this information to merge profiles between devices and browsers. \n\n!!! Tip\n\n    The script utilizes an underlying technique that involves creating a POST payload for the tracker, with \n    parameters such as `__tr_pid`, `__tr_src`. The payload contains data sent in a specific context, \n    formatted as follows in JSON:\n    \n    ```json\n    {\n      \"source\": {\n        \"id\": \"d15aaf64-90ff-4c72-9d93-e7851c326127\"\n      },\n      \"context\": {\n        \"tracardi\": {\n          \"pass\": {\n            \"profile\": \"0adfd4c8-36eb-40cd-9350-5df37706286a\",\n            \"source\": \"d15aaf64-90ff-4c72-9d93-e7851c326127\"\n          }\n        }\n      },\n      \"profile\": {\n        \"id\": \"0adfd4c8-36eb-40cd-9350-5df37706286a\"\n      },\n      \"session\": {\n        \"id\": \"3a18978e-1d74-4382-8e50-f0b8ae3c2d55\"\n      },\n      \"options\": {},\n      \"events\": [ ... ]\n    }\n    ```\n\n    This technique can be used also to reference profile ID from browser to device. \n    However you will need a find a way to pass the refered profile ID, session ID, and source ID to your mobile \n    device when the app is opened, and the first `/track` payload should include the refered IDs. The same \n    will also work with other systems. \n\nTo disable params `__tr_pid`, `__tr_src` and turn off session context, set `tracardiPass` to `false` in \ntracker context:\n\n```javascript title=\"Example\" linenums=\"1\" hl_lines=\"10-12\"\n    const options = {\n      tracker: {\n        url: {\n            script: 'http://localhost:8686/tracker',\n            api: 'http://localhost:8686'\n        },\n        source: {\n            id: \"3ee63fc6-490a-4fd8-bfb3-bf0c8c8d3387\"\n        },\n        context: {\n            tracardiPass: false\n        }\n    }\n}\n```\n\n\n### Respect Do Not Track (DNT) browser setting\n\nDo Not Track (DNT) is a web browser setting that adds a signal to the browser, telling websites that the user don\u2019t want\nto be tracked. By 2011, DNT had been adopted by all the major browsers, but it\u2019s not enforceable. That means its default\nvalue is set to track the user.\n\nYou can respect the browser setting and do not to track the user. If you decide to do this Tracardi will not load the\ntracking script if the user sets DNT. To respect the DNT set `respectDoNotTrack: true`\nin settings section of tracker options.\n\n```javascript title=\"Example\" linenums=\"1\" hl_lines=\"10-12\"\n    const options = {\n      tracker: {\n        url: {\n            script: 'http://localhost:8686/tracker',\n            api: 'http://localhost:8686'\n        },\n        source: {\n            id: \"3ee63fc6-490a-4fd8-bfb3-bf0c8c8d3387\"\n        },\n        settings: {\n          respectDoNotTrack: true\n        }\n    }\n}\n```\n\nIf the `respectDoNotTrack` is missing in the settings than Tracardi sets default setting and loads tracking script.\n"}